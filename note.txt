
Title: ExpressRoute
Catergory: Azure
Sub-Category: AZ-104

- between Azure and on-premise
- through private connection
	-> reliable
	-> fast
	-> high security
	-> consistent latency
- common to have more than 1 connection


Title: Subnet mask:
Catergory: Azure
Sub-Category: AZ-104

for each IP, there are Network and Host part
- number of network is determined by Subnet mask:
	-> from left to right of subnet, if digit = 1 then network, after that is host
	-> IP address:      172.16.1.0    (10101100.00010000.00000001.00000000)
	-> Subnet mark:     255.255.224.0 (11111111.11111111.11100000.00000000)
	-> from above case: <mark>first 19 digit = network, last 13 digits = host</mark>

- purpose for separate them:
	-> easy management
	-> route can quickly search the specific IP


Title: Class of Subnet
Catergory: Azure
Sub-Category: AZ-104


Class A: 255.0.0.0

Class B: 255.255.0.0

Class C: 255.255.255.0

- Class A is better for large company as more number of host can be provided






Title: bat call venv + python
Catergory: Coding
Sub-Category: Python



@echo off

call .\Material\my_env\Scripts\activate.bat

start python Material\main.py

timeout /t 10

start http://127.0.0.1:5000

exit









Title: 5 kinds of temporal windowing function
Catergory: Azure
Sub-Category: DP-203


1. TumblingWindow(minute, 1) : reading value for each 1 minute, non-overlapping
2. HoppingWindow(second, 60, 30) : read every 30 seconds and 60 seconds for each read
3. SlidingWindow(minute, 1) + having count(*) >3  : read for 10 seconds before a event,  if each event have recorded by three times, then alert
4. SessionWindow(second, 20, 60) : record 20 seconds if one event occur, if meet one more event, then  extend 20 second for this trigger, but no more than 60 seconds for each recording
5. System.Timestamp() (Snapshot) : record only for the event occur


Title: SCD Type
Catergory: Other
Sub-Category: Data Engineering

SCD TYPE1: UPDATE

SCD TYPE2: INSERT NEW RECORD

SCD TYPE3: ANOTHER COLUMN TO STORE PREVIOUS VALUE


Title: SQL vs Lake database in Azure
Catergory: Azure
Sub-Category: DP-203

sql database:
- table  = physical table
- external table : cache of data in data lake with metadata which updated on row data will not reflected on it



lake database:
- managed table: have a parquet file in data lake's synapse folder, if delete this table, the parquet file also dropped
- external table: path of the raw data in data lake
- the changes on the raw data in data lake will reflected on both managed and external table


Title: SQL Log
Catergory: Other
Sub-Category: SQL

BEGIN TRY SET @lineno = 1/0 END TRY BEGIN CATCH SET @msg =  'line ' + cast(ERROR_LINE() as varchar(10) ) +'  ' + convert(varchar, getdate(), 109)   END CATCH RAISERROR (@msg, 0, 1) WITH NOWAIT



Title: Edit all occurrences 
Catergory: Other
Sub-Category: VS Code

shortcut for edit all the occurrences at the same time

¡§CTRL + SHIFT + L¡¨





Title: Summary of Azure Network
Catergory: Azure
Sub-Category: AZ-900

<pre>
+----------------------------+------------------------------------------------------------------------+
| Virtual Network Gateway    | - site-to-site                                                         |
|                            | - point-to-site                                                        |
|                            | - network-to-network                                                   |
|                            | (Can choose VPN/ExpressRoute, Route/Policy based )                     |
+----------------------------+------------------------------------------------------------------------+
| Local Network gateway      | on-premise -> Virtual network (Public Internet)                        |
+----------------------------+------------------------------------------------------------------------+
| ExpressRoute               | on-premise -> Virtual network (Private + high speed)                   |
+----------------------------+------------------------------------------------------------------------+
| gateway subnet             | - subnet within Azure Virtual Network                                  |
|                            | - for hosting virtual network gateway (used together)                  |
+----------------------------+------------------------------------------------------------------------+
| Network Security Gateway   | - filter traffic flow in and out                                       |
| (NSGs)                     | - based on IP, Port, Protocol                                          |
|                            | - separately for each Virtual Network and subnet                       |
+----------------------------+------------------------------------------------------------------------+
| Azure Firewall             | - more advanced                                                        |
|                            | - app-level, URL, traffic filtering                                    |
|                            | - centralized management and policy enforcement across Virtual Network |
+----------------------------+------------------------------------------------------------------------+
| Service endpoints          | - directly from Virtual Network to Azure Services                      |
|                            | - without exposing the traffic to public internet                      |
+----------------------------+------------------------------------------------------------------------+
| application security group | - group VMs                                                            |
| (ASGs)                     | - define network security police                                       |
|                            | - on top of NSGs                                                       |
+----------------------------+------------------------------------------------------------------------+
| Peering                    | - connect Virtual Network and Microsoft's global network               |
+----------------------------+------------------------------------------------------------------------+


Azure Traffic Manager profile
- DNS-based traffic load balancer
e.g:
1. the web application located in 3 region(east us,west us and europe),
2. if client request this website, the traffic manager profile detect the geographic location of client (Europe)
3. route the client to Europe Endpoints as it is nearest

</pre>


Title: Azure storage services
Catergory: Azure
Sub-Category: AZ-900

<pre>
+---------------+------------------------------------------------------+
| Blob storage  | - all file format                                    |
|               | - massive                                            |
+---------------+------------------------------------------------------+
| file storage  | - standard Server Message Block(SMB) -> Linux/ macOS |
|               | - Network File System(NFS) protocols -> Window       |
|               | - shared access                                      |
+---------------+------------------------------------------------------+
| Queue storage | - storing large of message                           |
|               | - https/http                                         |
+---------------+------------------------------------------------------+
| Disk storage  | - manage disk                                        |
|               | - used with Azure VM                                 |
+---------------+------------------------------------------------------+
</pre>

Storage tier:
	-> Hot access tier: accessed frequently
	-> Cool access tier: infrequently and store for at least 30 days
	-> Archive access tier: rarely access and store for at least 180 days, flexible latency requirement




Title: Azure Monitor tool
Catergory: Azure
Sub-Category: AZ-900

<pre>
+------------------------------------+-----------------------------------------------------------------+
| Azure Monitor                      | - monitor apps,OS,resource,subscription,tenant and log data     |
|                                    | - visualize data                                                |
|                                    | - run query on the data gathered and analyze                    |
|                                    | - alert for performance, availability and usage                 |
|                                    | - integrate with logic app/export APIs and auto remediate       |
+------------------------------------+-----------------------------------------------------------------+
| Azure Advisor                      | - improve performance and achieve process efficiency            |
|                                    | - optimize resource/services and reduce cost                    |
+------------------------------------+-----------------------------------------------------------------+
| Azure Service Health               | - alert for outage incident and events that impact the services |
|                                    | - root cause analyses (RCAs)                                    |
|                                    | - how to avoid services interruption                            |
+------------------------------------+-----------------------------------------------------------------+
| Trust Center                       | - a website                                                     |
|                                    | - security standards for protecting data                        |
|                                    | - how implement security,privacy,compliance in Azure Product    |
+------------------------------------+-----------------------------------------------------------------+
| Azure Arc                          | - manage hybrid and multi-cloud environment                     |
|                                    | - use familiar Azure services                                   |
|                                    | - continue use traditional ITOps                                |
+------------------------------------+-----------------------------------------------------------------+
| Azure Resource Manage and Template | - JSON file define what to deploy                               |
|                                    | - include network,VM,storage,account etc                        |
|                                    | - repeat deploy multiple environment                            |
+------------------------------------+-----------------------------------------------------------------+
| Microsoft Defender for Cloud       | - defend both Azure, On-premise and other clouds                |
|                                    | - detect anomalous behavior                                     |
|                                    | - detect and respond to security threats in real-time           |
|                                    | - compliance assessments and recommendation                     |
|                                    | - protect sensitive data access                                 |
+------------------------------------+-----------------------------------------------------------------+
</pre>


Title: Azure Support plan
Catergory: Azure
Sub-Category: AZ-900

<pre>

+----------------------+-----------------+-------------------+------------------+------------------------+
|                      |      Basic      |      Developer    |     Standard     |   Professional direct  |
+----------------------+-----------------+-------------------+------------------+------------------------+
|                      | Request support |                    Purchase support                           |
+----------------------+-----------------+-------------------+------------------+------------------------+
|         Price        |        -        |   $29 per month   |  $100 per month  |     $1000 per month    |
+----------------------+-----------------+-------------------+------------------+------------------------+
|  third party support |        -        |                             Yes                               |
+----------------------+-----------------+-------------------+------------------+------------------------+
|     24/7 support     |        -        | email only during |                     Yes                   |
|    (email + phone)   |                 |   business hour   |                                           |
+----------------------+-----------------+-------------------+------------------+------------------------+
| response time by     |        -        | Minimal: 8        | Minimal: 8       | Minimal: 4             |
| Case Severity        |                 |                   | Moderate: 4      | Moderate: 2            |
|                      |                 |                   | Critical: 1      | Critical: 1            |
+----------------------+-----------------+-------------------+------------------+------------------------+
| Architecture support |        -        |          General guidance            | from ProDirect manager |
+----------------------+-----------------+-------------------+------------------+------------------------+

</pre>


Only Professional direct:
- support API
- Operation support(Service review + advise)
- Training
- proactive guidance

All:
- 24/7 help resource (video,documentation, community support)
- ability to submit as many support ticket as you need
- Azure advisor
- Azure health status and notification


Title: Azure App Service pricing:
Catergory: Azure
Sub-Category: AZ-900

<pre>

+------------------------------+--------+-------------+-------------+------------+------------+------------+
|                              | Free   | Shared      | Basic       | Standard   | Premium    | Isolated   |
+------------------------------+--------+-------------+-------------+------------+------------+------------+
| Disk Space                   | 1 GB   | 1 GB        | 10 GB       | 50 GB      | 250 GB     | 1 TB       |
+------------------------------+--------+-------------+-------------+------------+------------+------------+
| Web,mobile,API app           | 10     | 100         |                        unlimited                   |
+------------------------------+--------+-------------+-------------+------------+------------+------------+
| max instance                 | -      | -           | up to 3     | up to 10   | up to 30*  | up to 100  |
+------------------------------+--------+-------------+-------------+------------+------------+------------+
| Auto Scale                   | -      | -           |             |                 support              |
+------------------------------+--------+-------------+-------------+------------+------------+------------+
| Hybrid Connectivity          | -      | -           |                                                    |
+------------------------------+        |             |                                                    |
| Virtual Network Connectivity |        |             |                         support                    |
+------------------------------+        |             |                                                    |
| Private Endpoints            |        |             |                                                    |
+------------------------------+--------+-------------+-------------+------------+------------+------------+
| Compute Type                 |    Shared            |               Dedicated               | Isolated   |
+------------------------------+--------+-------------+-------------+------------+------------+------------+
| Pay as you go price          | Free   | $0.013/hour | $0.075/hour | $0.10/hour | $0.20/hour | $0.40/hour |
+------------------------------+--------+-------------+-------------+------------+------------+------------+
</pre>


Title: Reason of Using Elastic pool for SQL database
Catergory: Azure
Sub-Category: Data Engineering

Suppose you have 2 databases:

DB1: maximum usage is 20DTU, mostly spend on morning
DB2: maximum usage is 20DTU, mostly spend at night

- each database require 20 DTU to avoid downtime, then total 40 DTU is required
- one database under heavy load and other one is under light loads
- Combine them into single pool, the maximum usage maybe still lower than 40 DTU


Title: Concept of SD WAN
Catergory: Azure
Sub-Category: Network

Method of connectivity between sites (WAN Types):
- Broadband
- Metro-ethernet
- T1
- MPLS
- LTE


Why SD-WAN:
1. Companies have more than one sites
2. using which kinds of connectivity is based on location/availability
3. each site have its combination of connectivity (private/public)
4. each connection is managed separately
5. SD-WAN combine all the separated network into one encrypted network
6. all different network become a single entity and controlled in a single point



Title: Virtual WAN
Catergory: Azure
Sub-Category: Network


<img src="https://learn.microsoft.com/en-us/azure/virtual-wan/media/sd-wan-connectivity-architecture/hybrid.png#lightbox" width=60% >
- deploying VNet on the edge of a region (Hubs)
- connect on-premise to Hub
- fastest route to Azure


<b>interconnection of Virtual WAN with SD-WAN</b>

1. Direct Interconnect mode
- SD WAN CPE (right) connect to Virtual Hub directly via IPsec
- Branches connected via private SD-WAN


2. Direct Interconnect model with NVA-in-VWAN-hub
- Branch connect to NVA in virtual hub


3. Direct Interconnect model with NVA-in-VWAN-hub
- Branch connect to NVA in virtual hub


<a href="https://learn.microsoft.com/en-us/azure/virtual-wan/sd-wan-connectivity-architecture">Here for more information</a>

Title: Delta Lake table
Catergory: Azure
Sub-Category: DP-203

Delta Lake table

- easiest way to create is save a dataframe via pyspark
<pre>
<code>

from delta.tables import *
from pyspark.sql.functions import *

# Create a deltaTable object
deltaTable = DeltaTable.forPath(spark, delta_table_path)

# Update the table (reduce price of accessories by 10%)
deltaTable.update(
condition = "Category == 'Accessories'",
set = { "Price": "Price * 0.9" })

</code>
</pre>

Querying a previous version of a table
<pre>
<code>
df = spark.read.format("delta").option("versionAsOf", 0).load(delta_table_path)

#or

df = spark.read.format("delta").option("timestampAsOf", '2022-01-01').load(delta_table_path)
</code>
</pre>

Title: Synapse Analytics dedicated SQL Pool Distribution
Catergory: Azure
Sub-Category: DP-203

- Azure Synapse Analytics dedicated SQL Pool use Massively parallel architecture
- data distributied across a pool of nodes

- supported distribution:	
	-> Hash: one of the columns is designated as the distribution column
	<dd><img src="https://www.sqlshack.com/wp-content/uploads/2021/09/azure-synapse-hash-distribution_gray.png" alt="hash"></dd>
	-> Round-robin: distributed equally, no specific key
	-> Replicated: copy of table stored on each compute node


Title: Load file into Data warehouse
Catergory: Azure
Sub-Category: DP-203

SQL code:

<pre>
<code>
COPY INTO dbo.StageProducts
(ProductID, ProductName, ProductCategory, Color, Size, ListPrice, Discontinued)
FROM 'https://mydatalake.blob.core.windows.net/data/stagedfiles/products/*.parquet'
WITH
(
FILE_TYPE = 'PARQUET',
MAXERRORS = 0,
IDENTITY_INSERT = 'OFF'
);

</code>
</pre>


Title: SQL ranking window function
Catergory: Azure
Sub-Category: DP-203


1. ROW_NUMBER: return ordinal position without duplication
2. RANK: return ranked position, same rank with same value then skip the next rank, e.g. 1,2,2,4
3. DENSE_RANK: same as RANK but don't skip the next one after duplication
4. NTILE: divide rows into specific number of group, e.g. NTILE(3)


Approximate count:
- APPROX_COUNT_DISTINCT()
- a maximum error rate of 2% with 97% probability
- use it when precise count is not required


Title: SQL Merge
Catergory: Azure
Sub-Category: DP-203

"Merge" statement in SQL
- perform upsert
- Insert new Record + update existing Record

<pre>
<code>
MERGE dbo.DimProduct AS tgt
USING (SELECT * FROM dbo.StageProducts) AS src
ON src.ProductID = tgt.ProductBusinessKey



WHEN MATCHED THEN
-- Type 1 updates
	UPDATE SET
	tgt.ProductName = src.ProductName,
	tgt.ProductCategory = src.ProductCategory,
	tgt.Color = src.Color,
	tgt.Size = src.Size,
	tgt.ListPrice = src.ListPrice,
	tgt.Discontinued = src.Discontinued


WHEN NOT MATCHED THEN
	-- New products
	INSERT VALUES
	(src.ProductID,
	src.ProductName,
	src.ProductCategory,
	src.Color,
	src.Size,
	src.ListPrice,
	src.Discontinued);

</code>
</pre>


Title: rebuild table index
Catergory: Azure
Sub-Category: DP-203

- After loading new data into the data warehouse

<pre>
<code>
-- Rebuild indexes
ALTER INDEX ALL ON dbo.DimProduct REBUILD

-- Update statistics
CREATE STATISTICS productcategory_stats
ON dbo.DimProduct(ProductCategory);

</code>
</pre>


Title: Manage workloads in Azure Synapse Analytics
Catergory: Azure
Sub-Category: DP-203


1) Workload Classification
- simpliest and most common way: load and query
	-> load: insert, update, delete
	-> query: select
- subclassification of query:
	-> cube refreshes
	-> dashboard queries
	-> ad-hoc queries
- statement which do not require resource are not able to classfied
	-> DBCC
	-> BEGIN
	-> COMMIT
	-> ROLLBACK



2. Workload importance
- influence the order of a request get access to resource
- 5 levels:
	-> low
	-> below_normal
	-> normal
	-> above_normal
	-> high


=> create a workload classifier to add importance to certain query
<code>
IF EXISTS (SELECT * FROM sys.workload_management_workload_classifiers WHERE name = 'CEO')
BEGIN
DROP WORKLOAD CLASSIFIER CEO;
END
CREATE WORKLOAD CLASSIFIER CEO
WITH (WORKLOAD_GROUP = 'largerc'
,MEMBERNAME = 'asa.sql.workload01',IMPORTANCE = High);
</code>


3. Workload isolation
- reserves resources for a workload group
- define the amount of resources that are assigned per request
- workload groups are a mechanism to apply rules, such as query timeout, to requests


<code>

-- 1. create a workload Group called CEODemo
IF NOT EXISTS (SELECT * FROM sys.workload_management_workload_groups where name = 'CEODemo')
BEGIN
Create WORKLOAD GROUP CEODemo WITH
( MIN_PERCENTAGE_RESOURCE = 50        -- integer value
,REQUEST_MIN_RESOURCE_GRANT_PERCENT = 25 --  factor is 50, then 2 concurrency is guaranteed
,CAP_PERCENTAGE_RESOURCE = 100
)
END


-- 2. create a Workload Classifier called CEODreamDemo
IF NOT EXISTS (SELECT * FROM sys.workload_management_workload_classifiers where  name = 'CEODreamDemo')
BEGIN
Create Workload Classifier CEODreamDemo with
( Workload_Group ='CEODemo',MemberName='asa.sql.workload02',IMPORTANCE = BELOW_NORMAL);
END


-- 3. check what happen
SELECT s.login_name, r.[Status], r.Importance, submit_time,
start_time ,s.session_id FROM sys.dm_pdw_exec_sessions s
JOIN sys.dm_pdw_exec_requests r ON s.session_id = r.session_id
WHERE s.login_name IN ('asa.sql.workload02') and Importance
is not NULL AND r.[status] in ('Running','Suspended')
ORDER BY submit_time, status



-- another script combined step 1,2
IF  EXISTS (SELECT * FROM sys.workload_management_workload_classifiers where group_name = 'CEODemo')
BEGIN
Drop Workload Classifier CEODreamDemo
DROP WORKLOAD GROUP CEODemo
--- Creates a workload group 'CEODemo'.
Create  WORKLOAD GROUP CEODemo WITH
(MIN_PERCENTAGE_RESOURCE = 26 -- integer value
,REQUEST_MIN_RESOURCE_GRANT_PERCENT = 3.25 -- factor of 26 (guaranteed more than 4 concurrencies)
,CAP_PERCENTAGE_RESOURCE = 100
)
--- Creates a workload Classifier 'CEODreamDemo'.
Create Workload Classifier CEODreamDemo with
(Workload_Group ='CEODemo',MemberName='asa.sql.workload02',IMPORTANCE = BELOW_NORMAL);
END

</code>


Title: Valid trigger of Azure Data Factory or Azure Synapse Analytics
Catergory: Azure
Sub-Category: DP-203

1. Schedule trigger: wall-clock schedule
2. Tumbling window trigger: periodic interval + retaining state
3. Event-based trigger: response to an event
- Storage event trigger: arrival/deletion of a file
- Custom event trigger: handles custom articles in Event Grid


Tumbling window trigger vs Schedule trigger:
- Schedule trigger: "fire and forget" behavior
- tumbling window trigger: waits for the triggered pipeline run to finish


Title: Dynamic data masking
Catergory: Azure
Sub-Category: DP-203

Default:
- full masked according to the data type
<pre>
- Phone# varchar(12) MASKED WITH (FUNCTION = 'default()') NULL
- FUNCTION = 'default()'
</pre>

Email:
- aXXX@XXXX.com
<pre>
- ALTER COLUMN Email ADD MASKED WITH (FUNCTION = 'email()')
</pre>

Random:
- use on any numeric type
<pre>
- Account_Number bigint MASKED WITH (FUNCTION = 'random([start range], [end range])')
- ALTER COLUMN [Month] ADD MASKED WITH (FUNCTION = 'random(1, 12)')
</pre>

Custom String:
- exposes the first and last letters
- 555.123.1234 into 5XXXXXXX
<pre>
- FirstName varchar(100) MASKED WITH (FUNCTION = 'partial(prefix,[padding],suffix)') NULL
- ALTER COLUMN [Phone Number] ADD MASKED WITH (FUNCTION = 'partial(1,"XXXXXXX",0)')
</pre>

Datetime:
<pre>
- ALTER COLUMN BirthDay ADD MASKED WITH (FUNCTION = 'datetime("Y")')
- ALTER COLUMN BirthDay ADD MASKED WITH (FUNCTION = 'datetime("M")') --Month
- ALTER COLUMN BirthDay ADD MASKED WITH (FUNCTION = 'datetime("m")') --minutes
</pre>

!! the masked value still can be guessed by using "where condition" to select


Title: Diagnose the long time taken by SQL pool in Azure Synapse
Catergory: Azure
Sub-Category: DP-203

How:
- Click -> Monitor -> Metrics -> Scope

Metrics:
1. Cache hit percentage
2. Cache used percentage


Monitor for transactions that have rolled back
-  sys.dm_pdw_nodes_tran_database_transactions